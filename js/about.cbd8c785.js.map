{"version":3,"file":"js/about.cbd8c785.js","mappings":"uLAqKUA,IAAI,YAAYC,MAAM,c,0CAA9BC,EAAAA,EAAAA,IAAoD,SAApD,EAAoD,S,qBApItDC,EAAAA,GAAAA,SACEC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,IAIF,OACEC,UAEE,MAAMC,EAAa,CACjB,kBACA,mBACA,iBACA,iBACA,qBAGIC,EAAa,CACjB,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,IAAK,KACT,CAAC,EAAG,GAAI,IACR,CAAC,GAAI,GAAI,KACT,CAAC,IAAK,IAAK,MAGPC,EAAc,CAClBC,eAAgB,CACd,GACA,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,IAChB,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAItB,IAAIC,EAAM,GACV,MAAMC,EAAI,EACV,IAAIC,EAAYJ,EAAYC,eAAeE,GAAGE,OAE9C,IAAK,IAAIC,EAAY,EAAGA,EAAYF,EAAWE,IAC7CN,EAAYC,eAAeE,GAAGG,GAAWC,SAASC,IAChDC,QAAQC,IAAI,WAAYF,GACxB,IAAIG,EAAO,IAAIC,MAAMR,GAAWS,KAAK,MACrCF,EAAKL,GAAa,EAClBJ,EAAIY,KAAK,CACPC,gBACE,QACEhB,EAAWS,GAAU,GAAK,IAC1BT,EAAWS,GAAU,GAAK,IAC1BT,EAAWS,GAAU,GAHvB,QAMFQ,YACE,OACEjB,EAAWS,GAAU,GAAK,IAC1BT,EAAWS,GAAU,GAAK,IAC1BT,EAAWS,GAAU,GAAK,IAE5BS,YAAa,EACfN,KAAMA,GAfR,IAoBJF,QAAQC,IAAIR,GAEZ,MAAMgB,EAAMC,KAAKC,MAAMC,UAAUC,WAAW,MAC9B,IAAIlD,EAAAA,GAAM8C,EAAK,CAC3BK,KAAM,MACNC,MAAO,OACPb,KAAM,CACJc,OAAQ,CAAC,WAAY,YACrBC,SAAUxB,GAEZyB,QAAS,CACPC,QAAS,CACPC,QAAS,CACPC,SAAS,GAEXC,OAAQ,CACNC,SAAS,GAEXR,MAAO,CACLQ,SAAS,EACTC,KAAMnC,EAAWO,OAAS,eAAiBF,EAAI,GAAK,cAGxD+B,OAAQ,CACNC,EAAG,CACDC,SAAS,GAEXC,EAAG,CACDD,SAAS,IAGbE,YAAY,IAMjB,EACD3B,OACE,MAAO,CAAC,CAGT,G,QC1JH,MAAM4B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://pollenyzer/./src/views/AboutView.vue","webpack://pollenyzer/./src/views/AboutView.vue?d56f"],"sourcesContent":["<script>\n/* eslint-disable */\n\nimport { clusterData } from '@greenelab/hclust';\nimport { euclideanDistance } from '@greenelab/hclust';\nimport { avgDistance } from '@greenelab/hclust';\nimport {\n  Chart,\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle\n} from 'chart.js';\nChart.register(\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle\n);\n\n\nexport default {\n  mounted() {\n\n    const colors_str = [\n      \"rgb(0, 23, 244)\",\n      \"rgb(0, 223, 244)\",\n      \"rgb(0, 23, 24)\",\n      \"rgb(40, 23, 2)\",\n      \"rgb(40, 230, 244)\",\n    ]\n\n    const colors_rgb = [\n      [0, 23, 244],\n      [0, 223, 244],\n      [0, 23, 44],\n      [40, 50, 233],\n      [100, 144, 230],\n    ]\n\n    const clusterData = {\n      clustersGivenK: [\n        [],\n        [[3, 4], [1, 2, 0]],\n        [[3], [2, 0], [1, 4]]\n      ]\n    }\n\n    let res = []\n    const K = 1\n    let n_cluster = clusterData.clustersGivenK[K].length\n\n    for (let clusterId = 0; clusterId < n_cluster; clusterId++) {\n      clusterData.clustersGivenK[K][clusterId].forEach((pollenId) => {\n        console.log(\"pollenID\", pollenId)\n        let data = new Array(n_cluster).fill(null)\n        data[clusterId] = 1\n        res.push({\n          backgroundColor: (\n            \"rgba(\" +\n              colors_rgb[pollenId][0] + \",\" +\n              colors_rgb[pollenId][1] + \",\" +\n              colors_rgb[pollenId][2] + \",\" +\n              0.8 + \")\"\n          ),\n          borderColor: (\n            \"rgb(\" +\n              colors_rgb[pollenId][0] + \",\" +\n              colors_rgb[pollenId][1] + \",\" +\n              colors_rgb[pollenId][2] + \")\"\n          ),\n            borderWidth: 1,\n          data: data\n        })\n\n      })\n    }\n    console.log(res)\n\n    const ctx = this.$refs.barcanvas.getContext('2d');\n    let myChart = new Chart(ctx, {\n      type: 'bar',\n      title: \"heyo\",\n      data: {\n        labels: [\"cluster0\", \"cluster1\"],\n        datasets: res\n      },\n      options: {\n        plugins: {\n          tooltip: {\n            enabled: false\n          },\n          legend: {\n            display: false,\n          },\n          title: {\n            display: true,\n            text: colors_str.length + \" pollen in \" + (K + 1) + \" clusters\"\n          }\n        },\n        scales: {\n          x: {\n            stacked: true,\n          },\n          y: {\n            stacked: true\n          },\n        },\n        responsive: true,\n        //legend: { position: 'bottom' },\n      }\n    });\n\n\n  },\n  data() {\n    return {\n\n    };\n  },\n};\n\n</script>\n\n<template>\n  <canvas ref=\"barcanvas\" class=\"bar-canvas\"></canvas>\n</template>\n\n<style>\n</style>","import { render } from \"./AboutView.vue?vue&type=template&id=74bd24a8\"\nimport script from \"./AboutView.vue?vue&type=script&lang=js\"\nexport * from \"./AboutView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/bemootzer/promotion/research/projects/pollen_app/app/pollenyzer/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["ref","class","_createElementBlock","Chart","ArcElement","LineElement","BarElement","PointElement","BarController","BubbleController","DoughnutController","LineController","PieController","PolarAreaController","RadarController","ScatterController","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","Decimation","Filler","Legend","Title","Tooltip","SubTitle","mounted","colors_str","colors_rgb","clusterData","clustersGivenK","res","K","n_cluster","length","clusterId","forEach","pollenId","console","log","data","Array","fill","push","backgroundColor","borderColor","borderWidth","ctx","this","$refs","barcanvas","getContext","type","title","labels","datasets","options","plugins","tooltip","enabled","legend","display","text","scales","x","stacked","y","responsive","__exports__","render"],"sourceRoot":""}