"use strict";(self["webpackChunkpollenyzer"]=self["webpackChunkpollenyzer"]||[]).push([[443],{9757:function(e,t,r){r.r(t),r.d(t,{default:function(){return i}});var l=r(3396);const n={ref:"barcanvas",class:"bar-canvas"};function s(e,t,r,s,a,o){return(0,l.wg)(),(0,l.iD)("canvas",n,null,512)}r(856);var a=r(741);a.kL.register(a.qi,a.jn,a.ZL,a.od,a.vn,a.N0,a.jI,a.ST,a.tt,a.CV,a.Xi,a.ho,a.uw,a.f$,a.WV,a.l7,a.FB,a.RM,a.WY,a.Gu,a.De,a.Dx,a.u,a.DK);var o={mounted(){const e=["rgb(0, 23, 244)","rgb(0, 223, 244)","rgb(0, 23, 24)","rgb(40, 23, 2)","rgb(40, 230, 244)"],t=[[0,23,244],[0,223,244],[0,23,44],[40,50,233],[100,144,230]],r={clustersGivenK:[[],[[3,4],[1,2,0]],[[3],[2,0],[1,4]]]};let l=[];const n=1;let s=r.clustersGivenK[n].length;for(let a=0;a<s;a++)r.clustersGivenK[n][a].forEach((e=>{console.log("pollenID",e);let r=new Array(s).fill(null);r[a]=1,l.push({backgroundColor:"rgba("+t[e][0]+","+t[e][1]+","+t[e][2]+",0.8)",borderColor:"rgb("+t[e][0]+","+t[e][1]+","+t[e][2]+")",borderWidth:1,data:r})}));console.log(l);const o=this.$refs.barcanvas.getContext("2d");new a.kL(o,{type:"bar",title:"heyo",data:{labels:["cluster0","cluster1"],datasets:l},options:{plugins:{tooltip:{enabled:!1},legend:{display:!1},title:{display:!0,text:e.length+" pollen in "+(n+1)+" clusters"}},scales:{x:{stacked:!0},y:{stacked:!0}},responsive:!0}})},data(){return{}}},c=r(89);const u=(0,c.Z)(o,[["render",s]]);var i=u}}]);
//# sourceMappingURL=about.cbd8c785.js.map